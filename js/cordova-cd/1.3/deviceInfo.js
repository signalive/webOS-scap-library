cordova.define("cordova/plugin/deviceInfo",function(d,c,e){var a;if(window.PalmSystem){console.log("Window.PalmSystem Available");a=d("cordova/plugin/webos/service")}else{a={Request:function(h,i){console.log(h+" invoked. But I am a dummy because PalmSystem is not available");if(typeof i.onFailure==="function"){i.onFailure({returnValue:false,errorText:"PalmSystem Not Available. Cordova is not installed?"})}}}}var g=function(){};function f(h){}function b(i,j,h){if(i.errorCode===undefined||i.errorCode===null){i.errorCode=j}if(i.errorText===undefined||i.errorText===null){i.errorText=h}}g.prototype.getNetworkInfo=function(h,i){f("getNetworkInfo: ");a.Request("luna://com.palm.connectionmanager",{method:"getstatus",parameters:{},onSuccess:function(j){f("getNetworkInfo: onSuccess");delete j.returnValue;h&&h(j)},onFailure:function(j){f("getNetworkInfo: onFailure");delete j.returnValue;i&&i(j)}});f("DeviceInfo.getNetworkInfo Done")};g.prototype.setNetworkInfo=function(h,i,j){f("setNetworkInfo: ");a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"setNetworkInfo",parameters:j,onSuccess:function(k){f("setNetworkInfo: onSuccess");delete k.returnValue;h&&h(k)},onFailure:function(k){f("setNetworkInfo: onFailure");delete k.returnValue;i&&i(k)}});f("DeviceInfo.setNetworkInfo Done")};g.prototype.getBeaconInfo=function(h,i){f("getBeaconInfo: ");a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"getBeaconInfo",parameters:{},onSuccess:function(j){f("getBeaconInfo: onSuccess");delete j.returnValue;h&&h(j)},onFailure:function(j){f("getBeaconInfo: onFailure");delete j.returnValue;i&&i(j)}});f("DeviceInfo.getBeaconInfo Done")};g.prototype.setBeaconInfo=function(i,j,k){f("setBeaconInfo: ");var l=function(n){if(typeof n==="undefined"||n===null||n.length!=32){return false}var m=new RegExp(/^[a-fA-F0-9]*$/g);return m.exec(n)!=null?true:false};if(k.enabled===true&&(l(k.uuid)===false||isNaN(k.major)||k.major<0||k.major>65535||isNaN(k.minor)||k.minor<0||k.minor>65535)){f("setBeaconInfo: options are invalid.");if(j&&typeof j==="function"){var h={};b(h,"DSBI","DeviceInfo.setBeaconInfo. Invalid options.");j(h)}return}a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"setBeaconInfo",parameters:k,onSuccess:function(m){f("setBeaconInfo: onSuccess");delete m.returnValue;i&&i(m)},onFailure:function(m){f("setBeaconInfo: onFailure");delete m.returnValue;j&&j(m)}});f("DeviceInfo.setBeaconInfo Done")};g.prototype.getSoftApInfo=function(h,i){f("getSoftApInfo: ");a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"getSoftApInfo",parameters:{},onSuccess:function(j){f("getSoftApInfo: onSuccess");delete j.returnValue;h&&h(j)},onFailure:function(j){f("getSoftApInfo: onFailure");delete j.returnValue;i&&i(j)}});f("DeviceInfo.getSoftApInfo Done")};g.prototype.setSoftApInfo=function(i,j,k){f("setSoftApInfo: ");if((k.ssid!==null&&k.ssid.length>32)||(k.securityKey!=null&&k.securityKey.length!==6)){f("setSoftApInfo: options are invalid.");if(j&&typeof j==="function"){var h={};b(h,"DSSI","DeviceInfo.setSoftApInfo. Invalid options.");j(h)}return}a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"setSoftApInfo",parameters:k,onSuccess:function(l){f("setSoftApInfo: onSuccess");delete l.returnValue;i&&i(l)},onFailure:function(l){f("setSoftApInfo: onFailure");delete l.returnValue;j&&j(l)}});f("DeviceInfo.setSoftApInfo Done")};g.prototype.getWifiList=function(h,i){f("getWifiList: ");a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"getWifiList",parameters:{},onSuccess:function(j){f("getWifiList: onSuccess");delete j.returnValue;h&&h(j)},onFailure:function(j){f("getWifiList: onFailure");delete j.returnValue;i&&i(j)}});f("DeviceInfo.getWifiList Done")};g.prototype.connectWifi=function(h,i,j){f("connectWifi: ");a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"connectWifi",parameters:j,onSuccess:function(k){f("connectWifi: onSuccess");delete k.returnValue;h&&h(k)},onFailure:function(k){f("connectWifi: onFailure");delete k.returnValue;i&&i(k)}});f("DeviceInfo.connectWifi Done")};g.prototype.startWps=function(h,i,j){f("startWps: ");a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"startWps",parameters:j,onSuccess:function(k){f("startWps: onSuccess");delete k.returnValue;h&&h(k)},onFailure:function(k){f("startWps: onFailure");delete k.returnValue;i&&i(k)}});f("DeviceInfo.startWps Done")};g.prototype.stopWps=function(h,i){f("stopWps: ");a.Request("luna://com.webos.service.commercial.signage.storageservice/network/",{method:"stopWps",parameters:{},onSuccess:function(j){f("stopWps: onSuccess");delete j.returnValue;h&&h(j)},onFailure:function(j){f("stopWPS: onFailure");delete j.returnValue;i&&i(j)}});f("DeviceInfo.stopWps Done")};g.prototype.getNetworkMacInfo=function(h,i){f("getNetworkMacInfo: ");a.Request("luna://com.webos.service.tv.signage",{method:"getinfo",parameters:{},onSuccess:function(j){f("getNetworkMacInfo: onSuccess");delete j.returnValue;h&&h(j)},onFailure:function(j){f("getNetworkMacInfo: onFailure");delete j.returnValue;i&&i(j)}});f("DeviceInfo.getNetworkMacInfo Done")};g.prototype.getPlatformInfo=function(h,i){f("getPlatformInfo: ");a.Request("luna://com.webos.service.tv.systemproperty",{method:"getSystemInfo",parameters:{keys:["modelName","serialNumber","firmwareVersion","hardwareVersion","sdkVersion"]},onSuccess:function(j){f("getPlatformInfo: onSuccess");j.manufacturer="LGE";j.sdkVersion="1.3.22102";delete j.returnValue;delete j.errorText;h&&h(j)},onFailure:function(j){f("getPlatformInfo: onFailure");delete j.returnValue;i&&i(j)}});f("DeviceInfo.getPlatformInfo Done")};g.prototype.getSystemUsageInfo=function(h,i,j){f("getSystemUsageInfo: ");a.Request("luna://com.webos.service.commercial.signage.storageservice",{method:"getSystemUsageInfo",parameters:{cpus:j.cpus,memory:j.memory},onSuccess:function(k){if(k.returnValue===true){var l={};if(typeof k.memory!=="undefined"){l.memory=k.memory}if(typeof k.cpus!=="undefined"){l.cpus=k.cpus}h(l)}else{i({errorCode:k.errorCode,errorText:k.errorText})}},onFailure:function(k){i({errorCode:k.errorCode,errorText:k.errorText})}});f("DeviceInfo.getSystemUsageInfo Done")};e.exports=g});DeviceInfo=cordova.require("cordova/plugin/deviceInfo");